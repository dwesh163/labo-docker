services:
  db:
    image: postgres:17.2-bookworm
    shm_size: 128mb
    container_name: home-botany-dev-postgres
    volumes:
      - "./db-dev-data:/var/lib/postgresql/data"
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-default_password}
      POSTGRES_DB: home-botany
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d home-botany"]
      interval: 10s
      timeout: 5s
      retries: 5

  postg-rest:
    image: postgrest/postgrest:v12.0.3
    container_name: home-botany-dev-postgrest
    volumes:
      - "./postgrest.conf:/etc/postgrest.conf"
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
    command: ["postgrest", "/etc/postgrest.conf"]

  adminer:
    image: adminer
    container_name: home-botany-dev-adminer
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: node:22
    container_name: home-botany-dev-frontend
    working_dir: /app
    command: sh -c "npm install --legacy-peer-deps 2>/dev/null && npm run dev"
    ports:
        - 80:3000
    volumes:
        - ./front:/app
    environment:
        NODE_ENV: development
    depends_on:
      - postg-rest